clear all;

imgPosPath='nn_training\headOrnament_positive\';
% Create negative sample set by cropping a number of random "swatches" 
% from a random selection of raw image files.
% Use the same image sizes as those of the positive samples.

imgRawPath='E:\uwDataSciRightWhaleImagesRaw\imgs\';
imgNegPath='nn_training\headOrnament_negative\';

% Create a list of files form the positive sample set including the image
% dimensions. Store as a (Mx3) matrix.
dirPosImages=dir(strcat(imgPosPath,'*.jpg'));
nPosFiles=length(dirPosImages);  
posImDimList=cell(nPosFiles,3);
for idx=1:nPosFiles
   idx_imageFileName = strcat(imgPosPath,dirPosImages(idx).name);
   fInfo = imfinfo(idx_imageFileName);
   posImDimList(idx,:)={fInfo.Filename, fInfo.Width, fInfo.Height};  
end

% Create a list of files form the raw image set including image dimensions.
% Store as a (Mx3) matrix.
rawImDir=dir(strcat(imgRawPath,'*.jpg'));
nRawFiles=length(rawImDir);  
rawImDimList=cell(nRawFiles,3);
for idx=1:nRawFiles
   idx_imageFileName = strcat(imgRawPath,rawImDir(idx).name);
   fInfo = imfinfo(idx_imageFileName);
   rawImDimList(idx,:)={fInfo.Filename, fInfo.Width, fInfo.Height};  
end

%=============================================

% Create raw file iterator by randomly selecting first M raw images.
% M is the number of negative sample files to be generated by this program.
% Here we set M to match the number of postive sample files.

M=nPosFiles;
fIterator=floor(nRawFiles.*rand(M,1) + 1);

% To make swatch size distribution similar to that of positive sample size
% distribution, we will use random permutation of sizes of positive sampeles stored in posImDimList
  posImgIterator=randperm(length(posImDimList))';

%Create M negative sample swatches:
%Read-in a raw file listed in rawImDimList using fIterator
%Generate random xy coordinate for the bottom left corner of the swatch
%Crop a swatch of the size determined with posImgIterator from the raw image file
%Save the swatch as a "negative" sample
for idx=1:length(fIterator)
    currFileIdx=fIterator(idx);
    currImage = imread(rawImDimList{currFileIdx,1});
    %Determine the size of the swatch:
    swatchWidth=posImDimList{posImgIterator(idx), 2};
    swatchHeight=posImDimList{posImgIterator(idx), 3};
    %determine maximum allowable x-coordinate of the bottom left corner of the swatch
    %it is the difference of the width of the current image and the width
    %of the swatch
    xMax=rawImDimList{currFileIdx,2}-swatchWidth;
    %similarly, mximaum allowable y-coordinate:
    yMax=rawImDimList{currFileIdx,3}-swatchHeight;
    %random x-coordinate between 0 and xMax:
    x=floor((xMax+1)*rand);
    %same for the y-coordinate:
    y=floor((yMax+1)*rand);
    %Crop the swatch by specifying the rectangle[xmin ymin width height]
    swatch = imcrop(currImage,[x y swatchWidth swatchHeight]);
    %Save the swatch as a file
    swatchFileName=strcat(imgNegPath,'negSam_', num2str(idx), '.jpg');
    imwrite(swatch, swatchFileName);
end





